snippet		templ
abbr		template 
options		head
	//Copyright `strftime("%Y")` Ricky_Saurav

	/*
	  Licensed under the "THE BEER-WARE LICENSE" (Revision 42):
	  Ricky_Saurav wrote this file. As long as you retain this notice you
	  can do whatever you want with this stuff. If we meet some day, and you think
	  this stuff is worth it, you can buy me a beer or coffee in return
	*/
    #include<bits/stdc++.h>
	#define NL "\n"
	using namespace std;
	typedef long long ll;
	typedef pair<ll,ll>pll;
	#define fillm(a,val) memset(a,val,sizeof(a))
	const double pi = acos(-1.0);
	const ll mod = 1000000007;
	const ll maxn = ${1:100005};
	const ll inf = 1ll<<50;
	int main()
	{
	#ifdef LOCAL_SYS
		freopen("input.txt","r",stdin);
	#endif
		ios_base::sync_with_stdio(false);
		cin.tie(NULL);
		${0}
		return 0;
	}
snippet		outp
abbr		ouput
options		head
	freopen("output.txt","w",stdout);
snippet		lics
abbr		license
options		head
	//Copyright `strftime("%Y")` Ricky_Saurav

	/*
	  Licensed under the "THE BEER-WARE LICENSE" (Revision 42):
	  Ricky_Saurav wrote this file. As long as you retain this notice you
	  can do whatever you want with this stuff. If we meet some day, and you think
	  this stuff is worth it, you can buy me a beer or coffee in return
	*/
snippet     phak
abbr        phak
options     head
	cout<<"phak"<<endl;
snippet     files
abbr        IO
options     head
	#ifdef LOCAL_SYS
		freopen("input.txt","r",stdin);
	#endif
snippet     powm
abbr        powm 
options     head
	ll powmod(ll base, ll exp,ll mod)
	{
		ll res = 1;
		while(exp)
		{
			if(exp&1)
				res = (res*base)%mod;
			base = (base*base)%mod;
			exp>>=1;
		}
		return res;
	}
	${0}
snippet		norm
abbr		template 
options		head
	#include<bits/stdc++.h>
	#define NL "\n"
	using namespace std;
    #define ll long long
	typedef pair<ll,ll> pll;
	#define fillm(a,val) memset(a,val,sizeof(a))
	const ll mod = 1000000007;
	const ll maxn = ${1:100005};
	const ll inf = 1ll<<50;
	int main()
	{
	#ifdef LOCAL_SYS
		freopen("input.txt","r",stdin);
	#endif
		ios_base::sync_with_stdio(false);
		cin.tie(NULL);
		${0}
		return 0;
	}
snippet     case
abbr        case
options     head
	cout<<"Case #"<<tt<<": "<<${1:ans}<<NL;${0}
